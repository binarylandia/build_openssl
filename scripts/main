#!/usr/bin/env bash

set -euxo pipefail

REPO_URL="https://github.com/openssl/openssl"
VERSION="3.2.2"

export NAME="openssl"
export BUILD_DIR=".build"
export OUT_DIR=".out"
export INSTALL_DIR="/opt/${NAME}"

export NICE="nice -19 ionice -c2 -n5"
export JOBS="${JOBS:=$(($(nproc --all) + 2))}"

export build_time="$(date -u '+%Y-%m-%d_%H-%M-%S')"

function abspath() {
  readlink -m "$1"
}
export -f abspath

function log() {
  tee -a "${1}" | \
    GREP_COLOR='01;31' grep --line-buffered --color=always -iE "err|error|fail|can not|cannot|can't|unable|critical|fatal|reject|deny|denied|terminat|abort|panic|fault|invalid|undefined symbol|" | \
    GREP_COLOR='01;33' grep --line-buffered --color=always -iE "warn|warning|caution|alert|notice|" | \
    GREP_COLOR='01;36' grep --line-buffered --color=always -iE "note|info|status|detail|"
}
export -f log

function package() {
  local input_dir="${1}"
  local output_tarball="${2}"

  ${NICE} find "${input_dir}" -printf "%P\n" \
    | ${NICE} tar --no-recursion -cf - -C "${input_dir}" --files-from=- \
    | ${NICE} xz -T0 -k > "${output_tarball}"
}
export -f package

export THIS_DIR="$(abspath "$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)")"
export ROOT_DIR="$(abspath "${THIS_DIR}/..")"

export CC="ccache ${CC:-gcc}"
export CXX="ccache ${CXX:-g++}"
export CCACHE_DIR="/cache/ccache"
export CCACHE_NOCOMPRESS="1"
export CCACHE_MAXSIZE="50G"

build_dir="$(abspath ${BUILD_DIR})"
mkdir -p "${build_dir}"
outdir="$(abspath "${OUT_DIR}")"
mkdir -p "${outdir}"

pushd "$build_dir" >/dev/null
  src_dir="openssl-${VERSION}"

  if [ ! -d "${src_dir}" ]; then
    git clone --recursive --depth=100 -b "openssl-${VERSION}" "${REPO_URL}" "${src_dir}"
  fi

  pushd "${src_dir}" >/dev/null

    ${NICE} ./Configure \
      --prefix="${INSTALL_DIR}" \
      --libdir="lib" \
      --openssldir="${INSTALL_DIR}/etc/openssl" \
      no-apps \
      no-dso \
      no-engine \
      no-shared \
    2>&1 | log "build.log"

    ${NICE} make -j"$(nproc)" 2>&1 | log "build.log"
    ${NICE} make install_sw 2>&1 | log "build.log"

    sed -i'' -e 's|/opt/openssl|${prefix}|g' "${INSTALL_DIR}/lib/pkgconfig/libcrypto.pc"
    sed -i'' -e 's|/opt/openssl|${prefix}|g' "${INSTALL_DIR}/lib/pkgconfig/libssl.pc"
    sed -i'' -e 's|/opt/openssl|${prefix}|g' "${INSTALL_DIR}/lib/pkgconfig/openssl.pc"

    cp "build.log" "${INSTALL_DIR}/"

    package "${INSTALL_DIR}" "${outdir}/openssl-${VERSION}-static-${build_time}.tar.xz"

  popd >/dev/null
popd >/dev/null

